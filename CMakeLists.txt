SET(CMAKE_CXX_COMPILER "${CMAKE_SOURCE_DIR}/fasg++")

cmake_minimum_required(VERSION 2.6)
project(faslib)

#SUBDIRS(config)


#  MSVC UNIX BORLAND APPLE WIN32 CYGWIN

if(UNIX)

#-std=c++0x
#SET(CMAKE_CXX_COMPILER "/usr/bin/g++-3.3")

SET(CMAKE_CXX_FLAGS "-Wall -fno-rtti")
SET(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
SET(CMAKE_CXX_FLAGS_DEBUG  "-O0 -g")
SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO  "-O2 -g")


elseif(MSVC)

SET(CMAKE_CXX_FLAGS "/W3 /wd4503 /WX /EHsc /D_CRT_SECURE_NO_WARNINGS /D_SCL_SECURE_NO_WARNINGS")
SET(CMAKE_CXX_FLAGS_RELEASE "/O2 /DNDEBUG")
SET(CMAKE_CXX_FLAGS_DEBUG  "/Od /D_DEBUG")
SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO  "/Yd /O2 /DNDEBUG")

else(UNIX)
  
endif(UNIX)


add_subdirectory(config)

#SET(CMAKE_CXX_FLAGS "-Wall -fno-rtti -O0 -g" )
#SET(CMAKE_CXX_FLAGS "-Wall -fno-rtti -O3 -DNDEBUG" )  

#ADD_DEFINITIONS(-DFASLIB_TYPE_LIST_CHECK)
#ADD_DEFINITIONS(-DDISABLE_TYPE_LIST_SPEC)
#ADD_DEFINITIONS(-DFAS_ALGORITHM_LAMBDA_CAST)
ADD_DEFINITIONS(-DFAS_ALGORITHM_SIMPLIFY)
ADD_DEFINITIONS(-DFAS_DISABLE_WARNINGS)

SET(FAS_USE_RT_LIB ON)


message(STATUS ${FAS_USE_RT_LIB})
message(STATUS "FAS_USE_RT_LIB ON -->" ${HAVE_RT_LIB})
message(STATUS "FAS_USE_RT_LIB ON -->" ${FAS_USE_RT_LIB})
if (FAS_USE_RT_LIB )
message(STATUS "ADD_DEFINITIONS(-DFAS_USE_RT_LIB)")
ADD_DEFINITIONS(-DFAS_USE_RT_LIB)
else(FAS_USE_RT_LIB)
message(STATUS "NOT ADD_DEFINITIONS(-DFAS_USE_RT_LIB)")
endif(FAS_USE_RT_LIB)
message(STATUS "CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}")

ENABLE_TESTING()


include_directories(./)

#SET(CMAKE_BINARY_DIR "./build")
#SET(CMAKE_SOURCE_DIR ".")
#set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin/${CMAKE_PLATFORM}/${PROJECT_NAME})
#add_subdirectory(test)

add_subdirectory(test)
#add_subdirectory(example)
add_subdirectory(tutorial)
#add_subdirectory(probe )



SET(CPACK_PACKAGE_VERSION "0.2.0")

install(DIRECTORY fas test DESTINATION faslib
	PATTERN "*.cmake" EXCLUDE
	PATTERN "*~" EXCLUDE
	PATTERN ".*" EXCLUDE
	PATTERN "*.cmake" EXCLUDE
	PATTERN "Makefile" EXCLUDE
	PATTERN "CMakeFiles" EXCLUDE)

include(CPack)
